.\" Automatically generated by Pandoc 3.1.3
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "IMGCAT" "1" "October 21, 2025" "imgcat User Manual" "meow"
.hy
.SH NAME
.PP
\f[B]imgcat\f[R] - cat, but for images
.SH SYNOPSIS
.PP
\f[B]imgcat\f[R] \f[B][options]\f[R] \f[I]image\f[R]
.PD 0
.P
.PD
\f[B]imgcat\f[R] \f[B][options]\f[R] < \f[I]image\f[R]
.SH DESCRIPTION
.PP
\f[B]imgcat\f[R] prints an image to your terminal screen.
.PP
The image can either be provided as a command line argument, or can be
piped in through \f[V]stdin\f[R].
.PP
By default, the image is printed at the full width and color depth
detected for your terminal.
This can be overridden using \f[B]-w\f[R] to adjust the maximum width or
\f[B]-R\f[R] to prevent resizing, even if the image is too big to fit in
the terminal; and \f[B]-d\f[R] to explicitly set the color depth.
You may also use \f[B]-r\f[R] to adjust the height (\[lq]r\[rq] for
\[lq]number of rows\[rq]).
The image will be scaled without affecting the aspect ratio, unless
\f[B]-P\f[R] is provided.
.PP
Setting \f[B]-H\f[R] enables the use of half-height block drawing
characters (as opposed to \[lq]full height\[rq] spaces used in the
default mode).
This effectively doubles the vertical resolution of the terminal, and
thus the image on your terminal will appear less \[lq]squished\[rq], and
have a greater pixel resolution.
Note that this effect works best on terminals that output using a
bitmapped font, and have a line height of exactly 100%
(example (https://git.io/vhW5F)).
Using anti-aliased fonts may distort the blocks, and using a taller line
height will make the half-height block cover \f[I]less\f[R] than half of
the block, further distorting the image
(example (https://git.io/vhW5d)).
Your millage may vary.
.PP
If the output is not a terminal (that is, output is redirected to a
file, or piped into another program), then the image is \f[B]not\f[R]
resized and the color depth is set to 8 colors.
Overriding both width, height, and color depth still work.
.PP
\f[B]Make sure your \f[VB]TERM\f[B] environment variable is set to a
terminfo with the full capabilities of you terminal!\f[R] See
\f[B]Troubleshooting\f[R] if you\[cq]re having a problem with this.
.SS Options
.TP
\f[B]-d\f[R] \f[I]MODE\f[R], \f[B]\[en]depth\f[R]=\f[I]MODE\f[R]
Explicitly set the output color depth to one of \f[B]ansi\f[R],
\f[B]8\f[R] (alias of \f[B]ansi\f[R]), \f[B]256\f[R], \f[B]24bit\f[R],
\f[B]true\f[R] (alias of \f[B]24bit\f[R]) or \f[B]iterm\f[R].
If not provided, the output color depth will be inferred with
\f[V]tput colors\f[R].
.TP
\f[B]-h\f[R], \f[B]\[en]help\f[R]
Show common options and quit.
.TP
\f[B]-H\f[R], \f[B]\[en]half-height\f[R]
Prints half-height blocks to double the vertical resolution, and make
for a less squished image.
Works best when each character cell is exactly twice as tall as it is
wide and when your terminal is using a bitmapped font.
.TP
\f[B]-r\f[R] \f[I]ROWS\f[R], \f[B]\[en]height\f[R]=\f[I]ROWS\f[R]
Resizes the image to \f[I]ROWS\f[R] characters high.
Does nothing if \f[B]\[en]no-resize\f[R] is provided.
Maintains the original image\[cq]s aspect ratio if \f[B]\[en]width\f[R]
is NOT provided.
.TP
\f[B]-P\f[R], \f[B]\[en]no-preserve-aspect-ratio\f[R]
Allows for arbitrary image resizing when specifying both
\f[V]--width\f[R] and \f[V]--height\f[R].
By default, if both \f[V]--width\f[R] and \f[V]--height\f[R] are
provided, the image\[cq]s aspect ratio is preserved (it does not get
stretched in any direction), and the \f[V]--width\f[R] and
\f[V]--height\f[R] specify the maximum amount of characters that the
image be resized to.
If you provide \f[V]--no-preserve-aspect-ratio\f[R], then
\f[V]--width\f[R] and \f[V]--height\f[R] are exact dimensions, and the
image might be squished accordingly.
.TP
\f[B]-R\f[R], \f[B]\[en]no-resize\f[R]
Does not resize the image to fit the terminal\[cq]s width.
Overrides both \f[B]\[en]width\f[R] and \f[B]\[en]height\f[R].
.TP
\f[B]-v\f[R], \f[B]\[en]version\f[R]
Show version and quit.
.TP
\f[B]-w\f[R] \f[I]COLS\f[R], \f[B]\[en]width\f[R]=\f[I]COLS\f[R]
Shrink the image to \f[I]COLS\f[R] characters wide.
Does nothing if \f[B]\[en]no-resize\f[R] is provided, or if the image is
already as small as the provided width.
Maintains the original image\[cq]s aspect ratio if \f[B]\[en]height\f[R]
is NOT provided.
.TP
\f[B]\[en]8\f[R], \f[B]\[en]ansi\f[R]
Set the output colour depth to 8.
Same as \f[B]\[en]depth=8\f[R].
.TP
\f[B]\[en]256\f[R]
Set the output colour depth to 256.
Same as \f[B]\[en]depth=256\f[R].
.TP
\f[B]\[en]24bit\f[R], \f[B]\[en]true\f[R]
Set the output colour depth to 24 bit or \[lq]true\[rq] color.
Same as \f[B]\[en]depth=24bit\f[R].
.TP
\f[B]\[en]iterm2\f[R]
Set the output to iTerm inline image mode.
Same as \f[B]\[en]depth=iterm2\f[R].
.SS iTerm2 3.0
.PP
\f[B]imgcat\f[R] supports iTerm2\[cq]s full-color inline images (use
\f[B]-d iterm\f[R] to explicitly enable this).
However, iTerm2 is bundled with a script that is also called
\f[B]imgcat\f[R]!
To use this program in preference to the script bundled with iTerm2,
edit your shell\[cq]s configuration file such that, after the line that
sources iTerm2\[cq]s shell integration and utilities, you unalias its
built-in script:
.IP
.nf
\f[C]
unalias imgcat
\f[R]
.fi
.SS Troubleshooting
.PP
First, test how many colors your terminal can output:
.IP
.nf
\f[C]
$ tput colors
256
\f[R]
.fi
.PP
If this is not what you expect, you might want to change your
\f[V]TERM\f[R] environment variable.
For example, iTerm2 users will probably want the following:
.IP
.nf
\f[C]
$ export TERM=xterm-256color
\f[R]
.fi
.PP
However, it\[cq]s better that your terminal emulator reports itself with
the proper value for \f[V]TERM\f[R].
For iTerm2, again, look under the current profile settings > Terminal >
Terminal Emulation > and change \[lq]Report Terminal Type\[rq].
.SH BUGS
.PP
See GitHub Issues: <https://github.com/eddieantonio/imgcat/issues>
.SH AUTHOR
.PP
\f[B]imgcat\f[R] was written by Eddie Antonio Santos
<https://eddieantonio.ca/> and contributors.
